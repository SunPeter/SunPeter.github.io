---

layout: post
title:  "正则表达式"  
date:   2015-05-29 
tags: js

---
  
###基础知识
![image](http://7xj9ez.com1.z0.glb.clouddn.com/20150529QQ20150529-1@2x.png)

<!--more-->

###关于转义
* 元字符`\ ^ $ | .`这些已经有特殊含义  在使用时需要添加\进行转义  
* `[ab.]` 里面都是符合本来含义 不需再次转义  

###贪婪与懒惰
* 简单量词：`？ * + {n} {n,m} {n,}`  
* 贪婪：初始值为整个字符串，从右到左进行匹配。 
* 懒惰: 在上述简单量词后加上`?` 从左到右  如有匹配则停止   

###反向引用 
* 在正则里可用通过`/1 /2` 这种对（exp）进行引用 eg: `/(\d{3})-\1/`,这个就能匹配`123-123 `
* 在匹配结果里`RegExp.$1` 
* 字符串方法.eg: `string.replace(regexp,"$1")`   

###非捕获性分组
* `(?:exp)`:`RegExp.$1`取不到,不占用内存

###零宽断言
js不支持后瞻    
* `(?=exp)`	正向前瞻	匹配exp前面的位置  
eg:字符串:`bedroom`  
   正则: `/(?=room)/ `
* `(?!exp)`  负向前瞻	匹配exp前面的位置  
eg:字符串:`bedroom`  
   正则: `/(?!room)/ `


###常用到的正则表达式
* 匹配Email地址的正则表达式：`\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*`  
* 匹配网址URL的正则表达式：`[a-zA-z]+:\/\/[^s]*`
* 匹配ip地址：`\d+\.\d+\.\d+\.\d+`  
* 验证电话号码：`^((\d{3,4})|\d{3,4}-)?\d{7,8}$`

###参考
[正则在线测试工具](http://regexpal.com) 
[司徒正美博客-javascript正则表达式](http://www.cnblogs.com/rubylouvre/archive/2010/03/09/1681222.html/) 
[正则表达式30分钟入门教程](http://deerchao.net/tutorials/regex/regex.htm) 
[常用的JavaScript验证正则表达式](http://www.ccvita.com/61.html)