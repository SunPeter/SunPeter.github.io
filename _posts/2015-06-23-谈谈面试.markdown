---

layout: post
title:  "谈谈面试"  
date:   2015-06-23 
tags: js

---
  
#编程
___

##先来美团的三道编程题
题1：将一个对象扁平化输出  例如:

````javascript
{
    address: {
        province: "zhejiang",
        city: "hangzhou"
    },
    name: {
        first: "xun",
        last: "lu"
    },
    age: 98
}
````

输出:    

````javascript 
{
address.province: "zhejiang", 
address.city: "hangzhou", 
name.first: "xun", 
name.last: "lu", 
age: 98
}

````   
<!--more--> 

代码:	

````javascript
function path(object) {
    var o={}
    for (var item in object) {
        if (object.hasOwnProperty(item)) {
            var temp = object[item]
            if (arguments.length > 1) {
                var key = arguments[1] + "."
            } else key = ""
            if (typeof temp !== 'object') {
                key = key + item
                o[key] = temp
            } else {
                key = item
                path(temp, key)
            }
        }
    }
    return o;
}

````   

题2：找出下列单词中字母出现次数完全相同的并分组输出   
例如: `ssd sa sds ss as asdf` 输出: `ssd sds` ;`sa as`;  
代码:

````javascript
var arr = ["ab", "bcs", "bca", "sbc", "db", "ba", "cbs", "cbsa", "asbc"]
var o = {}
for (var i = 0, len = arr.length; i < len; i++) {
    var temp = arr[i].split("").sort().join("")
    if (temp in o) {
        o[temp].push(i)
    } else {
        o[temp] = [i]
    }
}
for (var item in o) {
    var ctx = o[item]
    if (ctx.length > 1) {
        for (var j = 0, lenx = ctx.length; j < lenx; j++) {
            ctx[j] = arr[ctx[j]]
        }
        console.log(ctx)
    }
}
````

题3：将一个二维数组从右上角开始45度方向依次输出 
例如:
[1,2,3]
[4,5,6]
[7,8,9]
输出:
[3]
[2,6]
[1,5,9]
[4,8]
[7]
代码:

````javascript
//初始化一个二维数组  
function Matrix(row, col) {
    this.row = row;
    this.col = col ? col : row;
    this.arr = [];
    this.init = function() {
        var row = this.row,
            col = this.col;
        for (var i = 0; i < row; i++) {
            this.arr[i] = []
            for (var j = 0; j < col; j++) {
                var num = Math.floor(Math.random() * 100)
                this.arr[i][j] = num
            }
            console.log(this.arr[i])
        }
        console.log("\n")
    }
    this.display = function() {
        var row = this.row,
            col = this.col,
            arr = this.arr;
        var x = col - 1,
            y = 0
        while (x >= 0) {
            var temp = [],
                x1 = x,
                y1 = y
            while (x1 < col && y1 < row) {
                temp.push(arr[y1][x1])
                x1++, y1++
            }
            console.log(temp)
            x--
        }
        x = 0, y = 1
        while (y < row) {
            var temp = [],
                x1 = x,
                y1 = y
            while (x1 < col && y1 < row) {
                temp.push(arr[y1][x1])
                x1++, y1++
            }
            console.log(temp)
            y++
        }
        console.log("\n")
    }
    this.init()
}

//测试用例  
function test() {
    var m1 = new Matrix(3)
    m1.display()
    var m2 = new Matrix(4)
    m2.display()
    var m3 = new Matrix(5)
    m3.display()
    var m4 = new Matrix(4, 5)
    m4.display()
}
````

 

