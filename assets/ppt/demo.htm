<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.3.5
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>canvas 基础动画入门 - By 孙圣达</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.moon.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>canvas 基础动画入门</h1>
<p><small>分享：孙圣达</small></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>一些准备</h2>

</hgroup><article>

<ul>
<li>角度(degree)和弧度(radian)<ul>
<li>$$ radian = degree * Math.PI / 180 $$</li>
<li>$$ degree = radian / Math.PI * 180 $$</li>
</ul>
</li>
<li>坐标系<ul>
<li>数学坐标系:x轴以上为正,x轴以下为负</li>
<li>canvas坐标系:x轴以下为正,x轴以上为负</li>
</ul>
</li>
<li>角度测量<ul>
<li>正常系统:逆时针为正</li>
<li>canvas:顺时针为正</li>
</ul>
</li>
<li>渲染机制 requestAnimationFrame</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>三角函数</h2>

</hgroup><article>

<ul class="fadeIn">
<li><code>Math.sin(30)</code> 输出?</li>
<li><code>Math.sin(30 / 180 * Math.PI)</code></li>
<li><code>y=Asin(ωx+φ)+k</code><iframe data-src="./0.html" src="about:blank;"></iframe></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>应用</h2>

</hgroup><article>

<h3>借助它的波形特性 我们可以实现一些相关效果</h3>
<ul>
<li>模拟脉冲<iframe data-src="./maichong.html" src="about:blank;"></iframe></li>
<li>圆周运动<iframe data-src="./1.html" src="about:blank;"></iframe></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>运动</h2>

</hgroup><article>

<ul>
<li>速度和速度向量 <code>vx vy</code><ul>
<li>x += vx y += vy</li>
</ul>
</li>
<li>角速度  <code>speed angle</code>    <ul>
<li>vx = speed * Math.cos(angle)</li>
<li>vy = speed * Math.sin(angle)</li>
</ul>
</li>
<li>加速度  <code>ax ay</code>  <ul>
<li>vx += ax</li>
<li>vy += ay</li>
</ul>
</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>边界处理</h2>

</hgroup><article>

<ul>
<li>移除  balls.splice(balls.indexOf(ball),1)</li>
<li>重置 （喷泉效果 设定每一帧都只有固定数量的水滴）</li>
<li>屏幕环绕 (射击类飞船游戏)</li>
<li>反弹 （小球碰撞）</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>简单的碰撞检测</h2>

</hgroup><article>

<ul>
<li>基于几何图形<pre>
<code class="javascript">
function checkCollision(rectA, rectB) {
return ! (rectA.x + rectA.width < rectB.x ||
         rectB.x + rectB.width < rectA.x ||
         rectA.y + rectA.height < rectB.y ||
         rectB.y + rectB.height < rectA.y);
};
</code>
</pre></li>
<li>基于距离<pre>
<code class="javascript">
function checkCollision(ball1, ball2) {
var dx = ball2.x - ball1.x,
    dy = ball2.y - ball1.x;
var dist =Math.sqrt(dx * dx + dy * dy);
var radius = ball1.radius + ball2.radius;
return dist <= radius;
};
</code>
</pre></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>坐标旋转</h2>

</hgroup><article>

<ul>
<li>如果两个物体的运动向量方向相同.我们可以直接对其进行加减。但是如果两者角度有差异,就需要我们进行简单的坐标旋转
<img src="./1.png" alt="&quot;坐标旋转&quot;"><pre>
<code class="javascript">
x = radius * cos(angle);
y = radius * sin(angle);
x1 = radius * cos(angle + rotation);
y1 = radius * sin(angle + rotation);
//cos(a + b) = cos(a) * cos(b) - sin(a) * sin(b);
//sin(a + b) = sin(a) * cos(b) + cos(a) * sin(b);
x1 = x * cos(rotation) – y * sin(rotation)
y1 = y * cos(rotation) + x * sin(rotation)
</code>
</pre></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>应用 斜面上的碰撞检测</h2>

</hgroup><article>

<ul>
<li>注意:如果斜面角度为a 此时坐标旋转的角度应该为-a 才能让其成为标准坐标系,之后进行还原
<br/><iframe data-src="./3.html" src="about:blank;"></iframe></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>比例运动</h2>

</hgroup><article>

<ul>
<li>缓动(easing): 速度与距离成正比</li>
<li>弹动(springing): 加速度与距离成正比
<br/><iframe data-src="./13.html" src="about:blank;"></iframe>
<iframe data-src="./14.html" src="about:blank;"></iframe></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>动量守恒和动能守恒</h2>

</hgroup><article>

<p>$$(m0 × v0) + (m1 × v1) = (m0 × v0Final) + (m1 × v1Final)$$
$$(m0 × v02) + (m1 × v12) = (m0 × v0Final2) + (m1 × v1Final2)$$
$$v0Final ={(m0 – m1) × v0 + 2 × m1 × v1 \over (m0 + m1) }$$
$$v1Final ={(m1 – m0) × v1 + 2 × m0 × v0 \over (m0 + m1) }$$</p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>简化版</h2>

</hgroup><article>

<pre>
<code class="javascript">
var vxTotal = ball0.vx – ball1.vx;
ball0.vx = ((ball0.mass - ball1.mass) * ball0.vx + 2 * ball1.mass * ball1.vx) / (ball0.mass + ball1.mass);
ball1.vx = vxTotal + ball0.vx;
</code>
</pre>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>应用</h2>

</hgroup><article>

<p><img src="./2.png" alt="&quot;双轴上的碰撞&quot;"></p>
<iframe data-src="./6.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>万有引力</h2>

</hgroup><article>

<p>$$force = {G × m × m \over distance2}$$</p>
<ul class="bounceIn">
<li>$$force = {m × m \over distance2}$$</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>应用</h2>

</hgroup><article>

<ul>
<li>万有引力作用示范</li>
<li>万有引力提供圆周运动向心力
<br/><iframe data-src="./11.html" src="about:blank;"></iframe>
<iframe data-src="./10.html" src="about:blank;"></iframe></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>正向运动和反向运动</h2>

</hgroup><article>

<ul>
<li>正向运动: 招手 （起源于固定端,运动于自由端）</li>
<li>反向运动: 手被人拉着
<br/><iframe data-src="./12.html" src="about:blank;" class="top-iframe"></iframe></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h2>相关书籍推荐</h2>

</hgroup><article>

<p><img src="./3.png" alt="&quot;HTML5+JavaScript动画基础&quot;"></p>

</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.3.5</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'move',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./js/demo.js"></script>
<link rel="stylesheet" href="./css/demo.css">

<!-- MathJax -->
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
  config: ["TeX-AMS-MML_HTMLorMML.js"],
  tex2jax: {inlineMath: [['\\(','\\)']]}});
  //['$','$'], 避免货币价格冲突
</script>
<script type="text/javascript" src="./js/mathjax/MathJax.js"></script>

<!--placeholder-->
</body>
</html>
